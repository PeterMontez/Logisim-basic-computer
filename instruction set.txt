NOP	0000 0000 0000 0000

and	0001 0000 aaaa bbbb	A = A & B
or 	0001 0001 aaaa bbbb	A = A | B
not	0001 0010 aaaa bbbb	A = !A
xor	0001 0011 aaaa bbbb	A = A ^ B
add	0001 0100 aaaa bbbb	A = A + B
sub	0001 0101 aaaa bbbb	A = A - B
mul	0001 0110 aaaa bbbb	A = A * B
div	0001 0111 aaaa bbbb	A = A / B
neg	0001 1000 aaaa bbbb	A = -A
lsh	0001 1001 aaaa bbbb	A = A << B
rsh	0001 1010 aaaa bbbb	A = A >> B
inc	0001 1011 aaaa xxxx	A = A + 1
dec	0001 1100 aaaa xxxx	A = A - 1	



mov	0010 aaaa cccc cccc	A = C				[ASSEMBLED]

mov	0011 0000 aaaa bbbb	A = B				[ASSEMBLED]

cmp	0100 xxxx aaaa bbbb	Compara A com B			[ASSEMBLED]
cmp	0101 aaaa cccc cccc	Compara A com C			[ASSEMBLED]

jump	0110 llll llll llll	Pula incondicional		...
je	0111 llll llll llll	Pula quando igual		...
jne	1000 llll llll llll	Pula quando diferente		...
jg	1001 llll llll llll	Pula quando maior		...
jge	1010 llll llll llll	Pula quando maior ou igual	...
jz	1011 llll llll llll	Pula se o ultimo valor foi zero	...

call	1100 llll llll llll	Chama uma função		...
ret	1101 1111 1111 1111	Retorna da função		...